# url for shapefile of all no parking signs in nyc
# "http://a841-dotweb01.nyc.gov/datafeeds/ParkingReg/Parking_Regulation_Shapefile.zip"

# shp to ndjson, exluding unwanted properties. Only keeping boro, text and coords
shp2json -n ./Parking_Regulation_Shapefile/Parking_Regulation_Shapefile.shp | ndjson-map '{"type": "Feature", "properties": {"SG_KEY_BOR": d.properties.SG_KEY_BOR, "SIGNDESC1": d.properties.SIGNDESC1}, "geometry": {"type": "Point", "coordinates": d.geometry.coordinates}}' | ndjson-filter 'd.properties.SG_KEY_BOR === "K"' | ndjson-filter 'd.properties.SIGNDESC1.includes("BROOM")' > bkbrooms.json

# split json to new lines
# ndjson-split 'd.features' < bkbrooms.json > bkbrooms.ndjson

# ndjson to geojson
# ndjson-reduce < bkbrooms.ndjson | ndjson-map '{type: "FeatureCollection", features: d}' > geoSweepsigns.json

shp2json -n < ./Parking_Regulation_Shapefile/Parking_Regulation_Shapefile.shp \
 | ndjson-map '{"type": "Feature", "properties": {"SG_KEY_BOR": d.properties.SG_KEY_BOR, "SIGNDESC1": d.properties.SIGNDESC1}, "geometry": {"type": "Point", "coordinates": d.geometry.coordinates}}' \
 | ndjson-filter 'd.properties.SIGNDESC1 != null, true'   > bksigns.ndjson




 ndjson-reduce < bksigns.ndjson ndjson-filter  'd.properties.SIGNDESC1.match(/BROOM/g)' > bkbrsigns.json

 shp2json -n build/cb_2015_us_county_5m.shp \
      | ndjson-filter '!/000$/.test(d.properties.GEOID)' \
      | ndjson-map '(d.id = d.properties.GEOID, delete d.properties, d)' \
      | geoproject -n 'd3.geoAlbersUsa().scale(1280).translate([480, 300])'